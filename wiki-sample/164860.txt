========,1,preface.
In computer programming, the interpreter pattern is a design pattern that specifies how to evaluate sentences in a language.
The basic idea is to have a class for each symbol (terminal or nonterminal) in a specialized computer language.
The syntax tree of a sentence in the language is an instance of the composite pattern and is used to evaluate (interpret) the sentence for a client.
See also Composite pattern.
========,2,Example.
========,3,BNF.
The following Backusâ€“Naur form example illustrates the interpreter pattern.
The grammar defines a language that contains Reverse Polish Notation expressions like:
========,3,Java.
Following the interpreter pattern there is a class for each grammar rule.
While the interpreter pattern does not address parsing a parser is provided for completeness.
Finally evaluating the expression "w x z - +" with w = 5, x = 10, and z = 42.
